// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	events "github.com/cloudfoundry/sonde-go/events"
	mock "github.com/stretchr/testify/mock"
)

// EnvelopeWriter is an autogenerated mock type for the EnvelopeWriter type
type EnvelopeWriter struct {
	mock.Mock
}

// Write provides a mock function with given fields: event
func (_m *EnvelopeWriter) Write(event *events.Envelope) {
	_m.Called(event)
}

// NewEnvelopeWriter creates a new instance of EnvelopeWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEnvelopeWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *EnvelopeWriter {
	mock := &EnvelopeWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
