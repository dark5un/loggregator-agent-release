// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/ingress/v1/event_unmarshaller.go

// Package v1_test is a generated GoMock package.
package v1_test

import (
	reflect "reflect"

	events "github.com/cloudfoundry/sonde-go/events"
	gomock "github.com/golang/mock/gomock"
)

// MockEnvelopeWriter is a mock of EnvelopeWriter interface.
type MockEnvelopeWriter struct {
	ctrl     *gomock.Controller
	recorder *MockEnvelopeWriterMockRecorder
}

// MockEnvelopeWriterMockRecorder is the mock recorder for MockEnvelopeWriter.
type MockEnvelopeWriterMockRecorder struct {
	mock *MockEnvelopeWriter
}

// NewMockEnvelopeWriter creates a new mock instance.
func NewMockEnvelopeWriter(ctrl *gomock.Controller) *MockEnvelopeWriter {
	mock := &MockEnvelopeWriter{ctrl: ctrl}
	mock.recorder = &MockEnvelopeWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvelopeWriter) EXPECT() *MockEnvelopeWriterMockRecorder {
	return m.recorder
}

// Write mocks base method.
func (m *MockEnvelopeWriter) Write(event *events.Envelope) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Write", event)
}

// Write indicates an expected call of Write.
func (mr *MockEnvelopeWriterMockRecorder) Write(event interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockEnvelopeWriter)(nil).Write), event)
}
