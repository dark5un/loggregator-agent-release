// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// BatchChainByteWriter is an autogenerated mock type for the BatchChainByteWriter type
type BatchChainByteWriter struct {
	mock.Mock
	
	// Track calls to Write
	WriteCalledCount int
	
	// Store messages for inspection in tests
	Messages [][]byte
}

// Write provides a mock function with given fields: message
func (_m *BatchChainByteWriter) Write(message []byte) error {
	ret := _m.Called(message)
	
	_m.WriteCalledCount++
	_m.Messages = append(_m.Messages, message)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewBatchChainByteWriter creates a new instance of BatchChainByteWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBatchChainByteWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *BatchChainByteWriter {
	mock := &BatchChainByteWriter{
		Messages: make([][]byte, 0),
	}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
} 