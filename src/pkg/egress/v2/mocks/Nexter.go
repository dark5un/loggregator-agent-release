// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	loggregator_v2 "code.cloudfoundry.org/go-loggregator/v10/rpc/loggregator_v2"
	mock "github.com/stretchr/testify/mock"
)

// Nexter is an autogenerated mock type for the Nexter type
type Nexter struct {
	mock.Mock
}

// TryNext provides a mock function with no fields
func (_m *Nexter) TryNext() (*loggregator_v2.Envelope, bool) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for TryNext")
	}

	var r0 *loggregator_v2.Envelope
	var r1 bool
	if rf, ok := ret.Get(0).(func() (*loggregator_v2.Envelope, bool)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *loggregator_v2.Envelope); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*loggregator_v2.Envelope)
		}
	}

	if rf, ok := ret.Get(1).(func() bool); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// NewNexter creates a new instance of Nexter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNexter(t interface {
	mock.TestingT
	Cleanup(func())
}) *Nexter {
	mock := &Nexter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
